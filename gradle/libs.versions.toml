[versions]
spring-boot = "3.3.0"
lucene = "9.11.1"
lombok = "1.18.32"
mapstruct = "1.5.5"
onnxruntime = "1.18.0"
jsoup = "1.21.2"
wiremock = "3.6.0"
testcontainers = "1.19.8"
assertj = "3.26.0"

[libraries]
spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "spring-boot" }
spring-boot-starter-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator", version.ref = "spring-boot" }
spring-boot-starter-validation = { module = "org.springframework.boot:spring-boot-starter-validation", version.ref = "spring-boot" }
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "spring-boot" }

lucene-core = { module = "org.apache.lucene:lucene-core", version.ref = "lucene" }
lucene-analysis-common = { module = "org.apache.lucene:lucene-analysis-common", version.ref = "lucene" }
lucene-queryparser = { module = "org.apache.lucene:lucene-queryparser", version.ref = "lucene" }
lucene-facet = { module = "org.apache.lucene:lucene-facet", version.ref = "lucene" }

micrometer-registry-prometheus = { module = "io.micrometer:micrometer-registry-prometheus" }
opentelemetry-instrumentation-annotations = { module = "io.opentelemetry.instrumentation:opentelemetry-instrumentation-annotations", version = "2.4.0" }

springdoc-openapi-starter-webmvc-ui = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", version = "2.5.0" }

lombok = { module = "org.projectlombok:lombok", version.ref = "lombok" }
mapstruct = { module = "org.mapstruct:mapstruct", version.ref = "mapstruct" }
mapstruct-processor = { module = "org.mapstruct:mapstruct-processor", version.ref = "mapstruct" }

onnxruntime = { module = "com.microsoft.onnxruntime:onnxruntime", version.ref = "onnxruntime" }
jsoup = { module = "org.jsoup:jsoup", version.ref = "jsoup" }
rome = { module = "com.rometools:rome", version = "2.1.0" }

wiremock = { module = "org.wiremock:wiremock-standalone", version.ref = "wiremock" }
testcontainers-junit = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers" }
assertj-core = { module = "org.assertj:assertj-core", version.ref = "assertj" }

[plugins]
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
spring-dependency-management = { id = "io.spring.dependency-management", version = "1.1.5" }
